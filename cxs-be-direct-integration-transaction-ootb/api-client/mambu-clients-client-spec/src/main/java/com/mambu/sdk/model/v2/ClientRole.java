/*
 * clients
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.mambu.sdk.model.v2;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.threeten.bp.OffsetDateTime;

import java.io.IOException;
import java.util.Objects;

/**
 * Describes the role of a client/group in the system
 */
@ApiModel(description = "Describes the role of a client/group in the system")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-04-17T14:40:27.775Z")
public class ClientRole {
    @SerializedName("encodedKey")
    private String encodedKey = null;

    @SerializedName("id")
    private String id = null;

    @SerializedName("name")
    private String name = null;
    @SerializedName("clientType")
    private ClientTypeEnum clientType = null;
    @SerializedName("creationDate")
    private OffsetDateTime creationDate = null;
    @SerializedName("canOpenAccounts")
    private Boolean canOpenAccounts = false;
    @SerializedName("canGuarantee")
    private Boolean canGuarantee = false;
    @SerializedName("requireID")
    private Boolean requireID = false;
    @SerializedName("useDefaultAddress")
    private Boolean useDefaultAddress = false;
    @SerializedName("description")
    private String description = null;

    /**
     * The encoded key of the client, auto generated, unique
     *
     * @return encodedKey
     **/
    @ApiModelProperty(value = "The encoded key of the client, auto generated, unique")
    public String getEncodedKey() {
        return encodedKey;
    }

    public ClientRole id(String id) {
        this.id = id;
        return this;
    }

    /**
     * The ID of the client role, can be generated and customized, unique
     *
     * @return id
     **/
    @ApiModelProperty(value = "The ID of the client role, can be generated and customized, unique")
    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public ClientRole name(String name) {
        this.name = name;
        return this;
    }

    /**
     * The name of the client role
     *
     * @return name
     **/
    @ApiModelProperty(value = "The name of the client role")
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public ClientRole clientType(ClientTypeEnum clientType) {
        this.clientType = clientType;
        return this;
    }

    /**
     * The type of the client for which this role was created
     *
     * @return clientType
     **/
    @ApiModelProperty(value = "The type of the client for which this role was created")
    public ClientTypeEnum getClientType() {
        return clientType;
    }

    public void setClientType(ClientTypeEnum clientType) {
        this.clientType = clientType;
    }

    /**
     * The creation date of the client role
     *
     * @return creationDate
     **/
    @ApiModelProperty(example = "2016-09-06T13:37:50+03:00", value = "The creation date of the client role")
    public OffsetDateTime getCreationDate() {
        return creationDate;
    }

    public ClientRole canOpenAccounts(Boolean canOpenAccounts) {
        this.canOpenAccounts = canOpenAccounts;
        return this;
    }

    /**
     * Indicates whether new accounts for this client type can be created
     *
     * @return canOpenAccounts
     **/
    @ApiModelProperty(value = "Indicates whether new accounts for this client type can be created")
    public Boolean isCanOpenAccounts() {
        return canOpenAccounts;
    }

    public void setCanOpenAccounts(Boolean canOpenAccounts) {
        this.canOpenAccounts = canOpenAccounts;
    }

    public ClientRole canGuarantee(Boolean canGuarantee) {
        this.canGuarantee = canGuarantee;
        return this;
    }

    /**
     * Indicates whether the clients under this type can be used as guarantors
     *
     * @return canGuarantee
     **/
    @ApiModelProperty(value = "Indicates whether the clients under this type can be used as guarantors")
    public Boolean isCanGuarantee() {
        return canGuarantee;
    }

    public void setCanGuarantee(Boolean canGuarantee) {
        this.canGuarantee = canGuarantee;
    }

    public ClientRole requireID(Boolean requireID) {
        this.requireID = requireID;
        return this;
    }

    /**
     * Indicates whether identification documents must be provided for the client to be created
     *
     * @return requireID
     **/
    @ApiModelProperty(value = "Indicates whether identification documents must be provided for the client to be created")
    public Boolean isRequireID() {
        return requireID;
    }

    public void setRequireID(Boolean requireID) {
        this.requireID = requireID;
    }

    public ClientRole useDefaultAddress(Boolean useDefaultAddress) {
        this.useDefaultAddress = useDefaultAddress;
        return this;
    }

    /**
     * Indicates whether the Mambu default address section will be available
     *
     * @return useDefaultAddress
     **/
    @ApiModelProperty(value = "Indicates whether the Mambu default address section will be available")
    public Boolean isUseDefaultAddress() {
        return useDefaultAddress;
    }

    public void setUseDefaultAddress(Boolean useDefaultAddress) {
        this.useDefaultAddress = useDefaultAddress;
    }

    public ClientRole description(String description) {
        this.description = description;
        return this;
    }

    /**
     * Text description for this client role
     *
     * @return description
     **/
    @ApiModelProperty(value = "Text description for this client role")
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ClientRole clientRole = (ClientRole) o;
        return Objects.equals(this.encodedKey, clientRole.encodedKey) &&
                Objects.equals(this.id, clientRole.id) &&
                Objects.equals(this.name, clientRole.name) &&
                Objects.equals(this.clientType, clientRole.clientType) &&
                Objects.equals(this.creationDate, clientRole.creationDate) &&
                Objects.equals(this.canOpenAccounts, clientRole.canOpenAccounts) &&
                Objects.equals(this.canGuarantee, clientRole.canGuarantee) &&
                Objects.equals(this.requireID, clientRole.requireID) &&
                Objects.equals(this.useDefaultAddress, clientRole.useDefaultAddress) &&
                Objects.equals(this.description, clientRole.description);
    }

    @Override
    public int hashCode() {
        return Objects.hash(encodedKey, id, name, clientType, creationDate, canOpenAccounts, canGuarantee, requireID, useDefaultAddress, description);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ClientRole {\n");

        sb.append("    encodedKey: ").append(toIndentedString(encodedKey)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    clientType: ").append(toIndentedString(clientType)).append("\n");
        sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
        sb.append("    canOpenAccounts: ").append(toIndentedString(canOpenAccounts)).append("\n");
        sb.append("    canGuarantee: ").append(toIndentedString(canGuarantee)).append("\n");
        sb.append("    requireID: ").append(toIndentedString(requireID)).append("\n");
        sb.append("    useDefaultAddress: ").append(toIndentedString(useDefaultAddress)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * The type of the client for which this role was created
     */
    @JsonAdapter(ClientTypeEnum.Adapter.class)
    public enum ClientTypeEnum {
        CLIENT("CLIENT"),

        GROUP("GROUP");

        private String value;

        ClientTypeEnum(String value) {
            this.value = value;
        }

        public static ClientTypeEnum fromValue(String text) {
            for (ClientTypeEnum b : ClientTypeEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static class Adapter extends TypeAdapter<ClientTypeEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final ClientTypeEnum enumeration) throws IOException {
                jsonWriter.value(enumeration.getValue());
            }

            @Override
            public ClientTypeEnum read(final JsonReader jsonReader) throws IOException {
                String value = jsonReader.nextString();
                return ClientTypeEnum.fromValue(String.valueOf(value));
            }
        }
    }

}

