/*
 * deposits
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.mambu.sdk.model.v2;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.math.BigDecimal;
import java.util.Objects;

/**
 * Groups all fields related to a deposit account&#39;s balances
 */
@ApiModel(description = "Groups all fields related to a deposit account's balances")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-04-17T14:24:31.447Z")
public class DepositAccountBalances {
    @SerializedName("totalBalance")
    private BigDecimal totalBalance = null;

    @SerializedName("overdraftAmount")
    private BigDecimal overdraftAmount = null;

    @SerializedName("technicalOverdraftAmount")
    private BigDecimal technicalOverdraftAmount = null;

    @SerializedName("lockedBalance")
    private BigDecimal lockedBalance = null;

    @SerializedName("availableBalance")
    private BigDecimal availableBalance = null;

    @SerializedName("holdBalance")
    private BigDecimal holdBalance = null;

    @SerializedName("overdraftInterestDue")
    private BigDecimal overdraftInterestDue = null;

    @SerializedName("technicalOverdraftInterestDue")
    private BigDecimal technicalOverdraftInterestDue = null;

    @SerializedName("feesDue")
    private BigDecimal feesDue = null;

    /**
     * The current balance of the account
     *
     * @return totalBalance
     **/
    @ApiModelProperty(value = "The current balance of the account")
    public BigDecimal getTotalBalance() {
        return totalBalance;
    }

    public void setTotalBalance(BigDecimal totalBalance) {
        this.totalBalance = totalBalance;
    }

    /**
     * How much money has been taken out in overdraft
     *
     * @return overdraftAmount
     **/
    @ApiModelProperty(value = "How much money has been taken out in overdraft")
    public BigDecimal getOverdraftAmount() {
        return overdraftAmount;
    }

    /**
     * How much money has been taken out as unplanned overdraft
     *
     * @return technicalOverdraftAmount
     **/
    @ApiModelProperty(value = "How much money has been taken out as unplanned overdraft")
    public BigDecimal getTechnicalOverdraftAmount() {
        return technicalOverdraftAmount;
    }

    /**
     * No operation can modify the balance of the account and get it lower than this locked balance
     *
     * @return lockedBalance
     **/
    @ApiModelProperty(value = "No operation can modify the balance of the account and get it lower than this locked balance")
    public BigDecimal getLockedBalance() {
        return lockedBalance;
    }

    /**
     * The current available balance for deposit transactions
     *
     * @return availableBalance
     **/
    @ApiModelProperty(value = "The current available balance for deposit transactions")
    public BigDecimal getAvailableBalance() {
        return availableBalance;
    }

    /**
     * The sum of all the authorization hold amounts on this account
     *
     * @return holdBalance
     **/
    @ApiModelProperty(value = "The sum of all the authorization hold amounts on this account")
    public BigDecimal getHoldBalance() {
        return holdBalance;
    }

    /**
     * How much interest is due to be paid on this account as a result of the authorized overdraft
     *
     * @return overdraftInterestDue
     **/
    @ApiModelProperty(value = "How much interest is due to be paid on this account as a result of the authorized overdraft")
    public BigDecimal getOverdraftInterestDue() {
        return overdraftInterestDue;
    }

    /**
     * How much interest is due to be paid on this account as a result of the technical overdraft
     *
     * @return technicalOverdraftInterestDue
     **/
    @ApiModelProperty(value = "How much interest is due to be paid on this account as a result of the technical overdraft")
    public BigDecimal getTechnicalOverdraftInterestDue() {
        return technicalOverdraftInterestDue;
    }

    /**
     * How much fees is due to be paid on this account
     *
     * @return feesDue
     **/
    @ApiModelProperty(value = "How much fees is due to be paid on this account")
    public BigDecimal getFeesDue() {
        return feesDue;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DepositAccountBalances depositAccountBalances = (DepositAccountBalances) o;
        return Objects.equals(this.totalBalance, depositAccountBalances.totalBalance) &&
                Objects.equals(this.overdraftAmount, depositAccountBalances.overdraftAmount) &&
                Objects.equals(this.technicalOverdraftAmount, depositAccountBalances.technicalOverdraftAmount) &&
                Objects.equals(this.lockedBalance, depositAccountBalances.lockedBalance) &&
                Objects.equals(this.availableBalance, depositAccountBalances.availableBalance) &&
                Objects.equals(this.holdBalance, depositAccountBalances.holdBalance) &&
                Objects.equals(this.overdraftInterestDue, depositAccountBalances.overdraftInterestDue) &&
                Objects.equals(this.technicalOverdraftInterestDue, depositAccountBalances.technicalOverdraftInterestDue) &&
                Objects.equals(this.feesDue, depositAccountBalances.feesDue);
    }

    @Override
    public int hashCode() {
        return Objects.hash(totalBalance, overdraftAmount, technicalOverdraftAmount, lockedBalance, availableBalance, holdBalance, overdraftInterestDue, technicalOverdraftInterestDue, feesDue);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class DepositAccountBalances {\n");

        sb.append("    totalBalance: ").append(toIndentedString(totalBalance)).append("\n");
        sb.append("    overdraftAmount: ").append(toIndentedString(overdraftAmount)).append("\n");
        sb.append("    technicalOverdraftAmount: ").append(toIndentedString(technicalOverdraftAmount)).append("\n");
        sb.append("    lockedBalance: ").append(toIndentedString(lockedBalance)).append("\n");
        sb.append("    availableBalance: ").append(toIndentedString(availableBalance)).append("\n");
        sb.append("    holdBalance: ").append(toIndentedString(holdBalance)).append("\n");
        sb.append("    overdraftInterestDue: ").append(toIndentedString(overdraftInterestDue)).append("\n");
        sb.append("    technicalOverdraftInterestDue: ").append(toIndentedString(technicalOverdraftInterestDue)).append("\n");
        sb.append("    feesDue: ").append(toIndentedString(feesDue)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

