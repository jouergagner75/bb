/*
 * deposits
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.mambu.sdk.model.v2;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.math.BigDecimal;
import java.util.Objects;

/**
 * Groups all fields related to internal controls
 */
@ApiModel(description = "Groups all fields related to internal controls")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-04-17T14:24:31.447Z")
public class DepositAccountInternalControls {
    @SerializedName("recommendedDepositAmount")
    private BigDecimal recommendedDepositAmount = null;

    @SerializedName("maxWithdrawalAmount")
    private BigDecimal maxWithdrawalAmount = null;

    @SerializedName("targetAmount")
    private BigDecimal targetAmount = null;

    public DepositAccountInternalControls recommendedDepositAmount(BigDecimal recommendedDepositAmount) {
        this.recommendedDepositAmount = recommendedDepositAmount;
        return this;
    }

    /**
     * Recommended amount for a deposit
     *
     * @return recommendedDepositAmount
     **/
    @ApiModelProperty(value = "Recommended amount for a deposit")
    public BigDecimal getRecommendedDepositAmount() {
        return recommendedDepositAmount;
    }

    public void setRecommendedDepositAmount(BigDecimal recommendedDepositAmount) {
        this.recommendedDepositAmount = recommendedDepositAmount;
    }

    public DepositAccountInternalControls maxWithdrawalAmount(BigDecimal maxWithdrawalAmount) {
        this.maxWithdrawalAmount = maxWithdrawalAmount;
        return this;
    }

    /**
     * The maximum amount allowed for a withdrawal
     *
     * @return maxWithdrawalAmount
     **/
    @ApiModelProperty(value = "The maximum amount allowed for a withdrawal")
    public BigDecimal getMaxWithdrawalAmount() {
        return maxWithdrawalAmount;
    }

    public void setMaxWithdrawalAmount(BigDecimal maxWithdrawalAmount) {
        this.maxWithdrawalAmount = maxWithdrawalAmount;
    }

    public DepositAccountInternalControls targetAmount(BigDecimal targetAmount) {
        this.targetAmount = targetAmount;
        return this;
    }

    /**
     * The target amount (the monthly/weekly/daily deposits should/may lead towards a savings goal)
     *
     * @return targetAmount
     **/
    @ApiModelProperty(value = "The target amount (the monthly/weekly/daily deposits should/may lead towards a savings goal)")
    public BigDecimal getTargetAmount() {
        return targetAmount;
    }

    public void setTargetAmount(BigDecimal targetAmount) {
        this.targetAmount = targetAmount;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DepositAccountInternalControls depositAccountInternalControls = (DepositAccountInternalControls) o;
        return Objects.equals(this.recommendedDepositAmount, depositAccountInternalControls.recommendedDepositAmount) &&
                Objects.equals(this.maxWithdrawalAmount, depositAccountInternalControls.maxWithdrawalAmount) &&
                Objects.equals(this.targetAmount, depositAccountInternalControls.targetAmount);
    }

    @Override
    public int hashCode() {
        return Objects.hash(recommendedDepositAmount, maxWithdrawalAmount, targetAmount);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class DepositAccountInternalControls {\n");

        sb.append("    recommendedDepositAmount: ").append(toIndentedString(recommendedDepositAmount)).append("\n");
        sb.append("    maxWithdrawalAmount: ").append(toIndentedString(maxWithdrawalAmount)).append("\n");
        sb.append("    targetAmount: ").append(toIndentedString(targetAmount)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

