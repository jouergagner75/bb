/*
 * deposits
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.mambu.sdk.model.v2;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Groups all fields related to a deposit account&#39;s interest payment settings
 */
@ApiModel(description = "Groups all fields related to a deposit account's interest payment settings")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-04-17T14:24:31.447Z")
public class DepositAccountInterestPaymentSettings {
    @SerializedName("interestPaymentPoint")
    private InterestPaymentPointEnum interestPaymentPoint = null;
    @SerializedName("interestPaymentDates")
    private List<MonthAndDay> interestPaymentDates = null;

    public DepositAccountInterestPaymentSettings interestPaymentPoint(InterestPaymentPointEnum interestPaymentPoint) {
        this.interestPaymentPoint = interestPaymentPoint;
        return this;
    }

    /**
     * The interest payment point, specifies when the interest should be paid to the account
     *
     * @return interestPaymentPoint
     **/
    @ApiModelProperty(value = "The interest payment point, specifies when the interest should be paid to the account")
    public InterestPaymentPointEnum getInterestPaymentPoint() {
        return interestPaymentPoint;
    }

    public void setInterestPaymentPoint(InterestPaymentPointEnum interestPaymentPoint) {
        this.interestPaymentPoint = interestPaymentPoint;
    }

    public DepositAccountInterestPaymentSettings interestPaymentDates(List<MonthAndDay> interestPaymentDates) {
        this.interestPaymentDates = interestPaymentDates;
        return this;
    }

    public DepositAccountInterestPaymentSettings addInterestPaymentDatesItem(MonthAndDay interestPaymentDatesItem) {
        if (this.interestPaymentDates == null) {
            this.interestPaymentDates = new ArrayList<MonthAndDay>();
        }
        this.interestPaymentDates.add(interestPaymentDatesItem);
        return this;
    }

    /**
     * The list of all dates on which the interest is payed into deposit account
     *
     * @return interestPaymentDates
     **/
    @ApiModelProperty(value = "The list of all dates on which the interest is payed into deposit account")
    public List<MonthAndDay> getInterestPaymentDates() {
        return interestPaymentDates;
    }

    public void setInterestPaymentDates(List<MonthAndDay> interestPaymentDates) {
        this.interestPaymentDates = interestPaymentDates;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DepositAccountInterestPaymentSettings depositAccountInterestPaymentSettings = (DepositAccountInterestPaymentSettings) o;
        return Objects.equals(this.interestPaymentPoint, depositAccountInterestPaymentSettings.interestPaymentPoint) &&
                Objects.equals(this.interestPaymentDates, depositAccountInterestPaymentSettings.interestPaymentDates);
    }

    @Override
    public int hashCode() {
        return Objects.hash(interestPaymentPoint, interestPaymentDates);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class DepositAccountInterestPaymentSettings {\n");

        sb.append("    interestPaymentPoint: ").append(toIndentedString(interestPaymentPoint)).append("\n");
        sb.append("    interestPaymentDates: ").append(toIndentedString(interestPaymentDates)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * The interest payment point, specifies when the interest should be paid to the account
     */
    @JsonAdapter(InterestPaymentPointEnum.Adapter.class)
    public enum InterestPaymentPointEnum {
        FIRST_DAY_OF_MONTH("FIRST_DAY_OF_MONTH"),

        EVERY_WEEK("EVERY_WEEK"),

        EVERY_OTHER_WEEK("EVERY_OTHER_WEEK"),

        EVERY_MONTH("EVERY_MONTH"),

        EVERY_3_MONTHS("EVERY_3_MONTHS"),

        ON_FIXED_DATES("ON_FIXED_DATES"),

        ON_ACCOUNT_MATURITY("ON_ACCOUNT_MATURITY");

        private String value;

        InterestPaymentPointEnum(String value) {
            this.value = value;
        }

        public static InterestPaymentPointEnum fromValue(String text) {
            for (InterestPaymentPointEnum b : InterestPaymentPointEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static class Adapter extends TypeAdapter<InterestPaymentPointEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final InterestPaymentPointEnum enumeration) throws IOException {
                jsonWriter.value(enumeration.getValue());
            }

            @Override
            public InterestPaymentPointEnum read(final JsonReader jsonReader) throws IOException {
                String value = jsonReader.nextString();
                return InterestPaymentPointEnum.fromValue(String.valueOf(value));
            }
        }
    }

}

